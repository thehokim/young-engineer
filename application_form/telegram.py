import requests
from django.core.files.uploadedfile import UploadedFile

BOT_TOKEN = "8052262027:AAGD..."  # –£–∫–æ—Ä–æ—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω
CHAT_IDS = [5008138452, 165378299, 68177994, 286042360]

def upload_file_to_telegram(file: UploadedFile):
    """Uploads a file to Telegram and returns the file_id."""
    if not file:
        print("‚ùå –§–∞–π–ª –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        return None

    file_extension = file.name.split(".")[-1].lower()

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–π –º–µ—Ç–æ–¥ API –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
    file_types = {
        "photo": ["jpg", "jpeg", "png", "gif", "bmp", "webp"],
        "video": ["mp4", "mov", "avi", "mkv"],
        "document": ["pdf", "doc", "docx", "xls", "xlsx", "txt"],
    }

    file_type = next((ftype for ftype, exts in file_types.items() if file_extension in exts), None)

    if not file_type:
        print(f"‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞: {file_extension}")
        return None

    url = f"https://api.telegram.org/bot{BOT_TOKEN}/send{file_type.capitalize()}"
    first_chat_id = CHAT_IDS[0]
    files = {file_type: (file.name, file.file)}
    data = {"chat_id": first_chat_id}

    response = requests.post(url, data=data, files=files)

    if response.status_code == 200:
        file_info = response.json()
        if not file_info.get("ok"):
            print(f"‚ùå –û—à–∏–±–∫–∞ Telegram API: {file_info}")
            return None

        file_id = file_info["result"].get("file_id")
        if not file_id:
            print(f"‚ùå –û—à–∏–±–∫–∞: Telegram –Ω–µ –≤–µ—Ä–Ω—É–ª file_id: {file_info}")
            return None

        print(f"‚úÖ {file_extension.upper()} —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω –≤ —á–∞—Ç {first_chat_id}")

        # –†–∞—Å—Å—ã–ª–∫–∞ –≤ –¥—Ä—É–≥–∏–µ —á–∞—Ç—ã
        for chat_id in CHAT_IDS[1:]:
            response = requests.post(url, data={"chat_id": chat_id, file_type: file_id})
            if response.status_code == 200:
                print(f"‚úÖ –§–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —á–∞—Ç {chat_id}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —á–∞—Ç {chat_id}: {response.status_code} - {response.text}")

        return file_id
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –≤ —á–∞—Ç {first_chat_id}: {response.status_code} - {response.text}")
        return None


def send_telegram_message(team_data):
    """Sends team information to Telegram chats."""
    text = f"""
üì© *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞*
üèÜ *–ö–æ–º–∞–Ω–¥–∞:* `{team_data['name']}`
üåç *–ì–æ—Ä–æ–¥:* `{team_data['city']}`
üè´ *–£—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ:* `{team_data['institution']}`
üìß *–ö–æ–Ω—Ç–∞–∫—Ç:* `{team_data['contact_info']}`

üë• *–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã:*
""" + "\n".join(
        [f"   üë§ `{member['full_name']}` - `{member['role']}` (üìÖ `{member['birth_date']}`)"
         for member in team_data["members"]]
    ) + f"""

üí° *–ü—Ä–æ–µ–∫—Ç:* `{team_data['project']['name']}`
üìú *–û–ø–∏—Å–∞–Ω–∏–µ:* `{team_data['project']['description']}`
üõ† *–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:* `{team_data['project']['technical_specs']}`
üîé *–î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:* `{team_data['project']['additional_info']}`
"""

    url_text = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"

    for chat_id in CHAT_IDS:
        response = requests.post(
            url_text,
            data={"chat_id": chat_id, "text": text, "parse_mode": "Markdown"}
        )
        if response.status_code == 200:
            print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {chat_id}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —á–∞—Ç {chat_id}: {response.status_code} - {response.text}")
