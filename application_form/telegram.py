import requests
from .models import BotSettings

def get_bot_settings():
    settings = BotSettings.objects.first()  # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é –∑–∞–ø–∏—Å—å
    if settings:
        return settings.chat_id, settings.bot_token
    return None, None

def upload_video_to_telegram(video_file):
    """ –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤–∏–¥–µ–æ –≤ Telegram –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫—É """
    chat_id, bot_token = get_bot_settings()
    
    if not chat_id or not bot_token:
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω Chat ID –∏–ª–∏ Bot Token!")
        return None

    url_video = f"https://api.telegram.org/bot{bot_token}/sendVideo"
    files = {'video': video_file}
    data = {"chat_id": chat_id}

    response = requests.post(url_video, data=data, files=files)

    if response.status_code == 200:
        video_info = response.json()
        file_id = video_info["result"]["video"]["file_id"]
        return f"https://t.me/{chat_id}/{file_id}"  # ‚úÖ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ: {response.status_code} - {response.text}")
        return None

def send_telegram_message(team_data, video_url=None):
    chat_id, bot_token = get_bot_settings()
    
    if not chat_id or not bot_token:
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω Chat ID –∏–ª–∏ Bot Token!")
        return

    text = f"""
üì© *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞*  
üèÜ *–ö–æ–º–∞–Ω–¥–∞:* `{team_data['name']}`  
üåç *–ì–æ—Ä–æ–¥:* `{team_data['city']}`  
üè´ *–£—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ:* `{team_data['institution']}`  
üìß *–ö–æ–Ω—Ç–∞–∫—Ç:* `{team_data['contact_info']}`  

üë• *–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã:*  
"""  
    for member in team_data['members']:
        text += f"   üë§ `{member['full_name']}` - `{member['role']}` (üìÖ `{member['birth_date']}`)\n"

    text += f"""

üí° *–ü—Ä–æ–µ–∫—Ç:* `{team_data['project']['name']}`  
üìú *–û–ø–∏—Å–∞–Ω–∏–µ:* `{team_data['project']['description']}`  
üõ† *–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:* `{team_data['project']['technical_specs']}`  
üîé *–î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:* `{team_data['project']['additional_info']}`  
"""

    # ‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
    url_text = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    response = requests.post(url_text, data={"chat_id": chat_id, "text": text, "parse_mode": "Markdown"})

    if response.status_code == 200:
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}: {response.text}")

    # ‚úÖ –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ—ë –≤ —á–∞—Ç
    if video_url:
        url_video_msg = f"https://api.telegram.org/bot{bot_token}/sendMessage"
        response_video = requests.post(url_video_msg, data={"chat_id": chat_id, "text": f"üé• –í–∏–¥–µ–æ: {video_url}", "parse_mode": "Markdown"})

        if response_video.status_code == 200:
            print("‚úÖ –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∏–¥–µ–æ: {response_video.status_code} - {response_video.text}")
