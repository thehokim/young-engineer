import requests

# –ó–∞–º–µ–Ω–∏—Ç–µ —Ç–æ–∫–µ–Ω –Ω–∞ –Ω–æ–≤—ã–π, –µ—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ!
TELEGRAM_BOT_TOKEN = "8052262027:AAGdM8LVE3tHX9jt8OAyiDMFqUoGRHmdCLc"
CHAT_ID = "5008138452"  # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —ç—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π chat_id

def send_telegram_message(team_data):  # ‚úÖ –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞
    text = f"""
üì© *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞*  
üèÜ *–ö–æ–º–∞–Ω–¥–∞:* `{team_data['name']}`  
üåç *–ì–æ—Ä–æ–¥:* `{team_data['city']}`  
üè´ *–£—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ:* `{team_data['institution']}`  
üìß *–ö–æ–Ω—Ç–∞–∫—Ç:* `{team_data['contact_info']}`  

üë• *–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã:*  
"""  
    for member in team_data['members']:
        text += f"   üë§ `{member['full_name']}` - `{member['role']}` (üìÖ `{member['birth_date']}`)\n"

    text += f"""

üí° *–ü—Ä–æ–µ–∫—Ç:* `{team_data['project']['name']}`  
üìú *–û–ø–∏—Å–∞–Ω–∏–µ:* `{team_data['project']['description']}`  
üõ† *–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:* `{team_data['project']['technical_specs']}`  
üîé *–î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:* `{team_data['project']['additional_info']}`  
"""

    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    payload = {  # ‚úÖ –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
        "chat_id": CHAT_ID,
        "text": text,
        "parse_mode": "Markdown"
    }
    response = requests.post(url, data=payload)  # ‚úÖ –¢–µ–ø–µ—Ä—å –Ω–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ —Å `data`
    
    if response.status_code == 200:
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}: {response.text}")

# –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
team_data = {  # ‚úÖ –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
    "name": "–∫—Ü—É–µ—É–∫–µ—É–∫–µ–Ω—É–∫–Ω",
    "city": "–¢–∞—à–∫–µ–Ω—Ç",
    "institution": "–¢–∞—à–∫–µ–Ω—Ç—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π",
    "contact_info": "techpioneers@example.com",
    "members": [
        {
            "full_name": "–ê–ª–µ–∫—Å–µ–π –°–º–∏—Ä–Ω–æ–≤",
            "birth_date": "1999-07-12",
            "role": "Backend-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫"
        },
        {
            "full_name": "–ú–∞—Ä–∏—è –ö–æ–≤–∞–ª—å",
            "birth_date": "2001-02-25",
            "role": "Frontend-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫"
        },
        {
            "full_name": "–û–ª–µ–≥ –ù–∞–∑–∞—Ä–æ–≤",
            "birth_date": "2000-11-30",
            "role": "–î–∏–∑–∞–π–Ω–µ—Ä UI/UX"
        }
    ],
    "project": {
        "name": "—Ä–∞–ø—Ä–∞–ø—Ä–ø—Ä",
        "description": "–°–∏—Å—Ç–µ–º–∞ —É–º–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞ —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –ò–ò –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ç—Ä–∞—Ñ–∏–∫–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–∞–º–∏.",
        "technical_specs": "Python, Django, React, PostgreSQL, AI/ML",
        "additional_info": "–ü—Ä–æ–µ–∫—Ç –≤–∫–ª—é—á–∞–µ—Ç –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é IoT-—É—Å—Ç—Ä–æ–π—Å—Ç–≤"
    }
}

send_telegram_message(team_data)  # ‚úÖ –ü–µ—Ä–µ–¥–∞—ë–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é